{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom'; //import App from './App';\n\nimport { createStore } from 'redux';\n\nconst AddItemToCart = () => {\n  return {\n    name: 'ADDITEMTOCART'\n  };\n};\n\n_c = AddItemToCart;\n\nconst DeleteItemFromCart = () => {\n  return {\n    name: 'DELETEITEMFROMCART'\n  };\n};\n\n_c2 = DeleteItemFromCart;\n\nconst Counter = (state = 0, action) => {\n  switch (action.type) {\n    case 'ADDITEMTOCART':\n      return state + 1;\n\n    case 'DELETEITEMFROMCART':\n      return state - 1;\n  }\n};\n\n_c3 = Counter;\nlet store = createStore(Counter);\nstore.subscribe(() => console.log(store.getState()));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AddItemToCart\");\n$RefreshReg$(_c2, \"DeleteItemFromCart\");\n$RefreshReg$(_c3, \"Counter\");","map":{"version":3,"sources":["C:/Users/Software Engineer/Documents/tehtävät/Web projekti 2/suojatarvikekauppa/suojatarvikekauppa/src/redux.js"],"names":["React","ReactDOM","createStore","AddItemToCart","name","DeleteItemFromCart","Counter","state","action","type","store","subscribe","console","log","getState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,SAAQC,WAAR,QAA0B,OAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;KAAMD,a;;AAKN,MAAME,kBAAkB,GAAG,MAAM;AAC7B,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;MAAMC,kB;;AAKN,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAOF,KAAK,GAAG,CAAf;;AACJ,SAAK,oBAAL;AACI,aAAOA,KAAK,GAAG,CAAf;AAJR;AAMH,CAPD;;MAAMD,O;AAQN,IAAII,KAAK,GAAGR,WAAW,CAACI,OAAD,CAAvB;AACAI,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import App from './App';\r\nimport {createStore} from 'redux';\r\n\r\nconst AddItemToCart = () => {\r\n    return {\r\n        name: 'ADDITEMTOCART'\r\n    }\r\n}\r\nconst DeleteItemFromCart = () => {\r\n    return {\r\n        name: 'DELETEITEMFROMCART'\r\n    }\r\n}\r\nconst Counter = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'ADDITEMTOCART':\r\n            return state + 1;\r\n        case 'DELETEITEMFROMCART':\r\n            return state - 1;\r\n    }\r\n}\r\nlet store = createStore(Counter);\r\nstore.subscribe(() => console.log(store.getState()));\r\n"]},"metadata":{},"sourceType":"module"}