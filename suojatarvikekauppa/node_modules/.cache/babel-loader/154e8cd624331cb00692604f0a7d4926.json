{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom'; //import App from './App';\n//import ReactRedux from 'react-redux';\n//import {createStore} from 'redux';\n\nexport const AddItemToCart = () => {\n  return {\n    name: 'ADDITEMTOCART'\n  };\n};\n_c = AddItemToCart;\nexport const DeleteItemFromCart = () => {\n  return {\n    name: 'DELETEITEMFROMCART'\n  };\n};\n_c2 = DeleteItemFromCart;\nexport const Counter = (state = 0, action) => {\n  switch (action.type) {\n    case 'ADDITEMTOCART':\n      return state + 1;\n\n    case 'DELETEITEMFROMCART':\n      return state - 1;\n  }\n}; //let store = createStore(Counter);\n//store.subscribe(() => console.log(store.getState()));\n\n_c3 = Counter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AddItemToCart\");\n$RefreshReg$(_c2, \"DeleteItemFromCart\");\n$RefreshReg$(_c3, \"Counter\");","map":{"version":3,"sources":["C:/Users/Software Engineer/Documents/tehtävät/Web projekti 2/suojatarvikekauppa/suojatarvikekauppa/src/redux.js"],"names":["React","ReactDOM","AddItemToCart","name","DeleteItemFromCart","Counter","state","action","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;KAAMD,a;AAKb,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;MAAMC,kB;AAKb,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAOF,KAAK,GAAG,CAAf;;AACJ,SAAK,oBAAL;AACI,aAAOA,KAAK,GAAG,CAAf;AAJR;AAMH,CAPM,C,CAQP;AACA;;MATaD,O","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import App from './App';\r\n//import ReactRedux from 'react-redux';\r\n//import {createStore} from 'redux';\r\n\r\nexport const AddItemToCart = () => {\r\n    return {\r\n        name: 'ADDITEMTOCART'\r\n    }\r\n}\r\nexport const DeleteItemFromCart = () => {\r\n    return {\r\n        name: 'DELETEITEMFROMCART'\r\n    }\r\n}\r\nexport const Counter = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'ADDITEMTOCART':\r\n            return state + 1;\r\n        case 'DELETEITEMFROMCART':\r\n            return state - 1;\r\n    }\r\n}\r\n//let store = createStore(Counter);\r\n//store.subscribe(() => console.log(store.getState()));\r\n"]},"metadata":{},"sourceType":"module"}